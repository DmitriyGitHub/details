public class ListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {

    private List<Model> mListModels;

    private RecyclerView mRecyclerView;
    private final int VIEW_TYPE_ITEM = 0;
    private final int VIEW_TYPE_LOADING = 1;
    private OnLoadMoreListener mOnLoadMoreListener;
    private boolean isLoading;
    private int mVisibleThreshold = 5;
    private int mLastVisibleItem, mTotalItemCount;


    public ListAdapter(List<Model> models, RecyclerView recyclerView) {
        mListModels = models;

        mRecyclerView = recyclerView;

        final LinearLayoutManager linearLayoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();

        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                super.onScrolled(recyclerView, dx, dy);

                mTotalItemCount = linearLayoutManager.getItemCount();
                mLastVisibleItem = linearLayoutManager.findLastVisibleItemPosition();

                if (!isLoading && mTotalItemCount <= (mLastVisibleItem + mVisibleThreshold)) {
                    if (mOnLoadMoreListener != null) {
                        mOnLoadMoreListener.onLoadMore();
                    }
                    isLoading = true;
                }
            }
        });

    }
    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

        LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());

        if (viewType == VIEW_TYPE_ITEM) {

            View view = layoutInflater
                    .inflate(R.layout.list_item, parent, false);

            return new ListViewHolder(view);
        } else if (viewType == VIEW_TYPE_LOADING) {
            View view1 = layoutInflater
                    .inflate(R.layout.layout_loading_item, parent, false);

            return new ListLoadingViewHolder(view1);
        }
        return null;
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, final int position) {

        int getItemType = holder.getItemViewType();
        if (getItemType == VIEW_TYPE_ITEM) {

            Model mModel = mListModels.get(position);

       
            ListViewHolder listHolder = (ListViewHolder) holder;
            listHolder.bindModel(mModel);
        } else if (getItemType == VIEW_TYPE_LOADING) {
            ListLoadingViewHolder listLoadingViewHolder = (ListLoadingViewHolder) holder;
            listLoadingViewHolder.mProgressBar.setIndeterminate(true);
        }
    }


    @Override
    public int getItemCount() {
        return (mListModels != null) ? mListModels.size() : 0;
    }

    @Override
    public int getItemViewType(int position) {
        return mListModels.get(position) != null ? VIEW_TYPE_ITEM : VIEW_TYPE_LOADING;
    }

    public void setOnLoadMoreListener(OnLoadMoreListener mOnLoadMoreListener) {
        this.mOnLoadMoreListener = mOnLoadMoreListener;
    }

    public void setLoading(boolean sLoading) {
        this.isLoading = sLoading;
    }
}
